<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--扫描组件 (除控制层)-->
    <context:component-scan base-package="com.jia.bookShop">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>


    <!--引入 jdbc.properties-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>

    <!-- 配置数据源-->
    <bean class="com.alibaba.druid.pool.DruidDataSource" id="dataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- 配置事务管理器-->
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--开启事务管理器的注解驱动 -->
    <tx:annotation-driven/>

    <!--配置SqlSessionFactoryBean ,可以直接在spring的IOC中获取配置SqlSessionFactory-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--配置核心配置文件  -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 配置数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--类型别名对应的包 -->
        <property name="typeAliasesPackage" value="com.jia.bookShop.pojo"/>
     </bean>


    <!--配置mapper接口的扫描，可以将指定包下所有的mapper接口，通过SqlSession创建代理实现类对象
     ，并将这些对象交给IOC容器管理
     -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.jia.bookShop.mapper"/>
    </bean>

</beans>